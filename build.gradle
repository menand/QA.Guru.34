plugins {
    id 'java-library'
    id 'com.github.ben-manes.versions' version '0.52.0'
}

dependencyUpdates {
    resolutionStrategy {
        componentSelection {
            all { ComponentSelection selection ->
                def unstableKeywords = ['alpha', 'beta', 'rc', 'm', 'snapshot']
                boolean isUnstable = unstableKeywords.any { keyword ->
                    selection.candidate.version.toLowerCase().contains(keyword)
                }
                if (isUnstable) {
                    selection.reject("Unstable version: ${selection.candidate.version}")
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.12.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.12.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.12.1'
    implementation 'com.codeborne:selenide:7.8.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.17'
    implementation 'net.datafaker:datafaker:2.4.2'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showExceptions true
        showStandardStreams true
    }
}
